overwrite: true
schema: "schema.graphql"
documents: lib/query/*.graphql
generates:
  lib/generated/graphql.ts:
    plugins:
      - add: 'import * as types from "../data/types"'
      - add: 'import { Pager } from "../data/pager"'
      - add: 'import Stripe from "stripe"'
      - add: 'import { MicroformatDocument } from "microformat-node"'
      - add: "export type EnumMap<T extends string, U> = { [K in T]: U }"
      - "typescript"
      - "typescript-resolvers"
    config:
      contextType: ../context#CourierContext
      scalars:
        Cursor: string
        DateTime: Date
      mappers:
        CreditCard: Stripe.cards.ICard
        Customer: Stripe.customers.ICustomer
        Event: types.Event
        EventConnection: Pager<types.Event>
        Feed: types.Feed
        FeedConnection: Pager<types.Feed>
        MicroformatPage: MicroformatDocument
        Post: types.Post
        PostConnection: Pager<types.Post>
        SubscribedFeed: types.SubscribedFeed
        SubscribedFeedConnection: Pager<types.SubscribedFeed>
        Tweet: types.Tweet
        TweetConnection: Pager<types.Tweet>
        User: types.UserInfo
        UserSubscription: Stripe.subscriptions.ISubscription
  lib/generated/graphql-components.tsx:
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-react-apollo"
    config:
      withHooks: true
      withComponent: true
      withHOC: false
