// Auto-generated by relay-compiler. Do not edit.

import Relay

struct TweetPostedEventQuery {
    var variables: Variables

    init(variables: Variables) {
        self.variables = variables
    }

    static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "TweetPostedEventQuery",
                selections: [
                    .field(ReaderLinkedField(
                        name: "tweetGroup",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "TweetGroup",
                        plural: false,
                        selections: [
                            .field(ReaderScalarField(
                                name: "id"
                            )),
                            .field(ReaderLinkedField(
                                name: "tweets",
                                concreteType: "Tweet",
                                plural: true,
                                selections: [
                                    .field(ReaderScalarField(
                                        name: "body"
                                    )),
                                    .field(ReaderScalarField(
                                        name: "mediaURLs"
                                    )),
                                    .field(ReaderScalarField(
                                        name: "postedTweetID"
                                    ))
                                ]
                            )),
                            .field(ReaderScalarField(
                                name: "status"
                            )),
                            .field(ReaderScalarField(
                                name: "postedAt"
                            )),
                            .field(ReaderScalarField(
                                name: "postAfter"
                            ))
                        ]
                    ))
                ]),
            operation: NormalizationOperation(
                name: "TweetPostedEventQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "tweetGroup",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "TweetGroup",
                        plural: false,
                        selections: [
                            .field(NormalizationScalarField(
                                name: "id"
                            )),
                            .field(NormalizationLinkedField(
                                name: "tweets",
                                concreteType: "Tweet",
                                plural: true,
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "body"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "mediaURLs"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "postedTweetID"
                                    ))
                                ]
                            )),
                            .field(NormalizationScalarField(
                                name: "status"
                            )),
                            .field(NormalizationScalarField(
                                name: "postedAt"
                            )),
                            .field(NormalizationScalarField(
                                name: "postAfter"
                            ))
                        ]
                    ))
                ]),
            params: RequestParameters(
                name: "TweetPostedEventQuery",
                operationKind: .query,
                text: """
query TweetPostedEventQuery(
  $id: ID!
) {
  tweetGroup(id: $id) {
    id
    tweets {
      body
      mediaURLs
      postedTweetID
    }
    status
    postedAt
    postAfter
  }
}
"""))
    }
}


extension TweetPostedEventQuery {
    struct Variables: VariableDataConvertible {
        var id: String

        var variableData: VariableData {
            [
                "id": id,
            ]
        }
    }
}

extension TweetPostedEventQuery {
    struct Data: Readable {
        var tweetGroup: TweetGroup_tweetGroup?

        init(from data: SelectorData) {
            tweetGroup = data.get(TweetGroup_tweetGroup?.self, "tweetGroup")
        }

        struct TweetGroup_tweetGroup: Readable {
            var id: String
            var tweets: [Tweet_tweets]
            var status: TweetStatus
            var postedAt: String?
            var postAfter: String?

            init(from data: SelectorData) {
                id = data.get(String.self, "id")
                tweets = data.get([Tweet_tweets].self, "tweets")
                status = data.get(TweetStatus.self, "status")
                postedAt = data.get(String?.self, "postedAt")
                postAfter = data.get(String?.self, "postAfter")
            }

            struct Tweet_tweets: Readable {
                var body: String
                var mediaURLs: [String]
                var postedTweetID: String?

                init(from data: SelectorData) {
                    body = data.get(String.self, "body")
                    mediaURLs = data.get([String].self, "mediaURLs")
                    postedTweetID = data.get(String?.self, "postedTweetID")
                }
            }
        }
    }
}

extension TweetPostedEventQuery: Relay.Operation {}
