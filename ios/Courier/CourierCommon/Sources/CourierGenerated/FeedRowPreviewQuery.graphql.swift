// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct FeedRowPreviewQuery {
    public var variables: Variables

    public init(variables: Variables) {
        self.variables = variables
    }

    public static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "FeedRowPreviewQuery",
                type: "Query",
                selections: [
                    .field(ReaderLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(ReaderLinkedField(
                                name: "allFeeds",
                                concreteType: "FeedConnection",
                                plural: false,
                                selections: [
                                    .field(ReaderLinkedField(
                                        name: "edges",
                                        concreteType: "FeedEdge",
                                        plural: true,
                                        selections: [
                                            .field(ReaderLinkedField(
                                                name: "node",
                                                concreteType: "Feed",
                                                plural: false,
                                                selections: [
                                                    .field(ReaderScalarField(
                                                        name: "id"
                                                    )),
                                                    .fragmentSpread(ReaderFragmentSpread(
                                                        name: "FeedRow_feed"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]
            ),
            operation: NormalizationOperation(
                name: "FeedRowPreviewQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(NormalizationLinkedField(
                                name: "allFeeds",
                                concreteType: "FeedConnection",
                                plural: false,
                                selections: [
                                    .field(NormalizationLinkedField(
                                        name: "edges",
                                        concreteType: "FeedEdge",
                                        plural: true,
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "node",
                                                concreteType: "Feed",
                                                plural: false,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "title"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "homePageURL"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "refreshedAt"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "refreshing"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "autopost"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]
            ),
            params: RequestParameters(
                name: "FeedRowPreviewQuery",
                operationKind: .query,
                text: """
query FeedRowPreviewQuery {
  viewer {
    allFeeds {
      edges {
        node {
          id
          ...FeedRow_feed
        }
      }
    }
  }
}

fragment FeedRow_feed on Feed {
  id
  title
  homePageURL
  refreshedAt
  refreshing
  autopost
}
"""
            )
        )
    }
}

extension FeedRowPreviewQuery {
    public typealias Variables = EmptyVariables
}



extension FeedRowPreviewQuery {
    public struct Data: Decodable {
        public var viewer: Viewer_viewer?

        public struct Viewer_viewer: Decodable {
            public var allFeeds: FeedConnection_allFeeds

            public struct FeedConnection_allFeeds: Decodable {
                public var edges: [FeedEdge_edges]

                public struct FeedEdge_edges: Decodable {
                    public var node: Feed_node

                    public struct Feed_node: Decodable, Identifiable, FeedRow_feed_Key {
                        public var id: String
                        public var fragment_FeedRow_feed: FragmentPointer
                    }
                }
            }
        }
    }
}

extension FeedRowPreviewQuery: Relay.Operation {}