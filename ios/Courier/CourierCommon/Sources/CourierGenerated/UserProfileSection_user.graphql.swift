// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct UserProfileSection_user {
    public var fragmentPointer: FragmentPointer

    public init(key: UserProfileSection_user_Key) {
        fragmentPointer = key.fragment_UserProfileSection_user
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "UserProfileSection_user",
            type: "Viewer",
            selections: [
                .field(ReaderScalarField(
                    name: "name"
                )),
                .field(ReaderScalarField(
                    name: "picture"
                ))
            ]
        )
    }
}

extension UserProfileSection_user {
    public struct Data: Decodable {
        public var name: String
        public var picture: String
    }
}

public protocol UserProfileSection_user_Key {
    var fragment_UserProfileSection_user: FragmentPointer { get }
}
extension UserProfileSection_user: Relay.Fragment {}

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI
extension UserProfileSection_user_Key {
    @available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
    public func asFragment() -> RelaySwiftUI.FragmentNext<UserProfileSection_user> {
        RelaySwiftUI.FragmentNext<UserProfileSection_user>(self)
    }
}
#endif