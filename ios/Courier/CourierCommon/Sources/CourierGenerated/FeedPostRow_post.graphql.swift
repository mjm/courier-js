// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct FeedPostRow_post {
    public var fragmentPointer: FragmentPointer

    public init(key: FeedPostRow_post_Key) {
        fragmentPointer = key.fragment_FeedPostRow_post
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "FeedPostRow_post",
            type: "Post",
            selections: [
                .field(ReaderScalarField(
                    name: "id"
                )),
                .field(ReaderScalarField(
                    name: "url"
                )),
                .field(ReaderScalarField(
                    name: "title"
                )),
                .field(ReaderScalarField(
                    name: "htmlContent"
                )),
                .field(ReaderScalarField(
                    name: "publishedAt"
                ))
            ]
        )
    }
}

extension FeedPostRow_post {
    public struct Data: Decodable, Identifiable {
        public var id: String
        public var url: String
        public var title: String
        public var htmlContent: String
        public var publishedAt: String?
    }
}

public protocol FeedPostRow_post_Key {
    var fragment_FeedPostRow_post: FragmentPointer { get }
}

extension FeedPostRow_post: Relay.Fragment {}

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI

extension FeedPostRow_post_Key {
    @available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
    public func asFragment() -> RelaySwiftUI.FragmentNext<FeedPostRow_post> {
        RelaySwiftUI.FragmentNext<FeedPostRow_post>(self)
    }
}
#endif