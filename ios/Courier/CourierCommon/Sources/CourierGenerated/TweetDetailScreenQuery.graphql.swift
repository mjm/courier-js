// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct TweetDetailScreenQuery {
    public var variables: Variables

    public init(variables: Variables) {
        self.variables = variables
    }

    public static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "TweetDetailScreenQuery",
                type: "Query",
                selections: [
                    .field(ReaderLinkedField(
                        name: "tweetGroup",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "TweetGroup",
                        plural: false,
                        selections: [
                            .field(ReaderScalarField(
                                name: "id"
                            )),
                            .field(ReaderLinkedField(
                                name: "tweets",
                                concreteType: "Tweet",
                                plural: true,
                                selections: [
                                    .field(ReaderScalarField(
                                        name: "__typename"
                                    ))
                                ]
                            )),
                            .fragmentSpread(ReaderFragmentSpread(
                                name: "ViewTweet_tweetGroup"
                            )),
                            .fragmentSpread(ReaderFragmentSpread(
                                name: "EditTweetForm_tweetGroup"
                            ))
                        ]
                    ))
                ]
            ),
            operation: NormalizationOperation(
                name: "TweetDetailScreenQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "tweetGroup",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "TweetGroup",
                        plural: false,
                        selections: [
                            .field(NormalizationScalarField(
                                name: "id"
                            )),
                            .field(NormalizationLinkedField(
                                name: "tweets",
                                concreteType: "Tweet",
                                plural: true,
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "__typename"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "body"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "mediaURLs"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "postedTweetID"
                                    ))
                                ]
                            )),
                            .field(NormalizationScalarField(
                                name: "status"
                            )),
                            .field(NormalizationScalarField(
                                name: "postAfter"
                            )),
                            .field(NormalizationScalarField(
                                name: "postedAt"
                            )),
                            .field(NormalizationScalarField(
                                name: "postedRetweetID"
                            ))
                        ]
                    ))
                ]
            ),
            params: RequestParameters(
                name: "TweetDetailScreenQuery",
                operationKind: .query,
                text: """
query TweetDetailScreenQuery(
  $id: ID!
) {
  tweetGroup(id: $id) {
    id
    tweets {
      __typename
    }
    ...ViewTweet_tweetGroup
    ...EditTweetForm_tweetGroup
  }
}

fragment DetailedTweetActions_tweetGroup on TweetGroup {
  tweets {
    postedTweetID
  }
  id
  status
  postAfter
  postedAt
  postedRetweetID
}

fragment DetailedTweetList_tweetGroup on TweetGroup {
  tweets {
    body
    ...DetailedTweetRow_tweet
  }
}

fragment DetailedTweetRow_tweet on Tweet {
  body
  mediaURLs
}

fragment EditTweetForm_tweetGroup on TweetGroup {
  id
  tweets {
    body
    mediaURLs
  }
}

fragment ViewTweet_tweetGroup on TweetGroup {
  status
  ...DetailedTweetList_tweetGroup
  ...DetailedTweetActions_tweetGroup
}
"""
            )
        )
    }
}

extension TweetDetailScreenQuery {
    public struct Variables: VariableDataConvertible {
        public var id: String

        public init(id: String) {
            self.id = id
        }

        public var variableData: VariableData {
            [
                "id": id
            ]
        }
    }

    public init(id: String) {
        self.init(variables: .init(id: id))
    }
}

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI

@available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
extension RelaySwiftUI.QueryNext.WrappedValue where O == TweetDetailScreenQuery {
    public func get(id: String, fetchKey: Any? = nil) -> RelaySwiftUI.QueryNext<TweetDetailScreenQuery>.Result {
        self.get(.init(id: id), fetchKey: fetchKey)
    }
}
#endif

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI

@available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
extension RelaySwiftUI.RefetchableFragment.Wrapper where F.Operation == TweetDetailScreenQuery {
    public func refetch(id: String) {
        self.refetch(.init(id: id))
    }
}
#endif

extension TweetDetailScreenQuery {
    public struct Data: Decodable {
        public var tweetGroup: TweetGroup_tweetGroup?

        public struct TweetGroup_tweetGroup: Decodable, Identifiable, ViewTweet_tweetGroup_Key, EditTweetForm_tweetGroup_Key {
            public var id: String
            public var tweets: [Tweet_tweets]
            public var fragment_ViewTweet_tweetGroup: FragmentPointer
            public var fragment_EditTweetForm_tweetGroup: FragmentPointer

            public struct Tweet_tweets: Decodable {
                public var __typename: String
            }
        }
    }
}

extension TweetDetailScreenQuery: Relay.Operation {}