// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct FeedRow_feed {
    public var fragmentPointer: FragmentPointer

    public init(key: FeedRow_feed_Key) {
        fragmentPointer = key.fragment_FeedRow_feed
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "FeedRow_feed",
            type: "Feed",
            selections: [
                .field(ReaderScalarField(
                    name: "id"
                )),
                .field(ReaderScalarField(
                    name: "title"
                )),
                .field(ReaderScalarField(
                    name: "homePageURL"
                )),
                .field(ReaderScalarField(
                    name: "refreshedAt"
                )),
                .field(ReaderScalarField(
                    name: "refreshing"
                )),
                .field(ReaderScalarField(
                    name: "autopost"
                ))
            ]
        )
    }
}

extension FeedRow_feed {
    public struct Data: Decodable, Identifiable {
        public var id: String
        public var title: String
        public var homePageURL: String
        public var refreshedAt: String?
        public var refreshing: Bool
        public var autopost: Bool
    }
}

public protocol FeedRow_feed_Key {
    var fragment_FeedRow_feed: FragmentPointer { get }
}

extension FeedRow_feed: Relay.Fragment {}

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI

extension FeedRow_feed_Key {
    @available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
    public func asFragment() -> RelaySwiftUI.FragmentNext<FeedRow_feed> {
        RelaySwiftUI.FragmentNext<FeedRow_feed>(self)
    }
}
#endif